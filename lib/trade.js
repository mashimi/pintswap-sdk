"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createContract = exports.wrapEth = exports.toWETH = exports.coerceToWeth = exports.setFallbackWETH = exports.WETH_ADDRESSES = exports.transactionToObject = exports.defer = exports.genericAbi = exports.leftZeroPad = exports.hashOffer = exports.keyshareToAddress = exports.toBigInt = void 0;
const ethers_1 = require("ethers");
const emasm_1 = require("emasm");
const bn_js_1 = __importDefault(require("bn.js"));
const WETH9_json_1 = __importDefault(require("canonical-weth/build/contracts/WETH9.json"));
const { solidityPackedKeccak256, toBeArray, getAddress, computeAddress, getUint, hexlify, } = ethers_1.ethers;
// UTILS
function toBigInt(v) {
    if (v.toHexString)
        return v.toBigInt();
    return v;
}
exports.toBigInt = toBigInt;
function keyshareToAddress(keyshareJsonObject) {
    let { Q } = keyshareJsonObject;
    let prepend = new bn_js_1.default(Q.y, 16).mod(new bn_js_1.default(2)).isZero() ? "0x02" : "0x03";
    let derivedPubKey = prepend + leftZeroPad(new bn_js_1.default(Q.x, 16).toString(16), 64);
    return computeAddress(derivedPubKey);
}
exports.keyshareToAddress = keyshareToAddress;
const hashOffer = (o) => {
    return solidityPackedKeccak256(["address", "address", "uint256", "uint256"], [
        getAddress(o.givesToken),
        getAddress(o.getsToken),
        o.givesAmount,
        o.getsAmount,
    ]);
};
exports.hashOffer = hashOffer;
function leftZeroPad(s, n) {
    return "0".repeat(n - s.length) + s;
}
exports.leftZeroPad = leftZeroPad;
exports.genericAbi = [
    "function approve(address, uint256) returns (bool)",
    "function allowance(address, address) view returns (uint256)",
    "function balanceOf(address) view returns (uint256)",
];
const defer = () => {
    let resolve, reject, promise = new Promise((_resolve, _reject) => {
        resolve = _resolve;
        reject = _reject;
    });
    return {
        resolve,
        reject,
        promise,
    };
};
exports.defer = defer;
const transactionToObject = (tx) => ({
    nonce: tx.nonce,
    value: tx.value,
    from: tx.from,
    gasPrice: tx.gasPrice,
    gasLimit: tx.gasLimit,
    chainId: tx.chainId,
    data: tx.data,
    maxFeePerGas: tx.maxFeePerGas,
    maxPriorityFeePerGas: tx.maxPriorityFeePerGas,
});
exports.transactionToObject = transactionToObject;
// ETH/WETH
exports.WETH_ADDRESSES = Object.assign(Object.entries(WETH9_json_1.default.networks).reduce((r, [chainId, { address }]) => {
    r[chainId] = address;
    return r;
}, {}), {
    "42161": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
    "137": "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619",
    "10": "0x4200000000000000000000000000000000000006",
    "43112": "0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB",
});
let fallbackWETH = null;
const setFallbackWETH = (address) => {
    fallbackWETH = address;
};
exports.setFallbackWETH = setFallbackWETH;
const coerceToWeth = (address, signer) => __awaiter(void 0, void 0, void 0, function* () {
    if (address === ethers_1.ethers.ZeroAddress) {
        const { chainId } = yield signer.provider.getNetwork();
        return (0, exports.toWETH)(chainId);
    }
    return address;
});
exports.coerceToWeth = coerceToWeth;
const toWETH = (chainId = 1) => {
    const chain = String(chainId);
    const address = exports.WETH_ADDRESSES[chain];
    return (address ||
        fallbackWETH ||
        (() => {
            throw Error("no WETH contract found for chainid " + chain);
        })());
};
exports.toWETH = toWETH;
const wrapEth = (signer, amount) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const { chainId } = yield signer.provider.getNetwork();
        yield new ethers_1.ethers.Contract((0, exports.toWETH)(chainId.toString()), ["function deposit()"], signer).deposit({ value: amount });
        return true;
    }
    catch (err) {
        console.error(err);
        return false;
    }
});
exports.wrapEth = wrapEth;
const ln = (v) => (console.log(v), v);
// SWAP CONTRACT
const createContract = (offer, maker, taker, chainId = 1, permitData = {}) => {
    if (!permitData)
        permitData = {};
    if (permitData.maker || permitData.taker) {
        if (permitData.maker && !permitData.taker) {
            if (offer.getsToken === ethers_1.ethers.ZeroAddress) {
                return (0, emasm_1.emasm)([
                    "pc",
                    "returndatasize",
                    "0xe4",
                    "returndatasize",
                    "returndatasize",
                    getAddress(offer.givesToken),
                    "0xd505accf00000000000000000000000000000000000000000000000000000000",
                    "0x0",
                    "mstore",
                    maker,
                    "0x4",
                    "mstore",
                    "address",
                    "0x24",
                    "mstore",
                    hexlify(offer.givesAmount),
                    "0x44",
                    "mstore",
                    hexlify(toBeArray(getUint(permitData.maker.expiry))),
                    "0x64",
                    "mstore",
                    hexlify(toBeArray(getUint(permitData.maker.v))),
                    "0x84",
                    "mstore",
                    hexlify(permitData.maker.r),
                    "0xa4",
                    "mstore",
                    hexlify(permitData.maker.s),
                    "0xc4",
                    "mstore",
                    "gas",
                    "call",
                    "0x0",
                    "0x0",
                    "0x64",
                    "0x0",
                    "0x0",
                    (0, exports.toWETH)(chainId),
                    "0x23b872dd00000000000000000000000000000000000000000000000000000000",
                    "0x0",
                    "mstore",
                    getAddress(taker),
                    "0x4",
                    "mstore",
                    "address",
                    "0x24",
                    "mstore",
                    hexlify(offer.getsAmount),
                    "0x44",
                    "mstore",
                    "gas",
                    "call",
                    "and",
                    "0x0",
                    "0x0",
                    "0x64",
                    "0x0",
                    "0x0",
                    getAddress(offer.givesToken),
                    getAddress(maker),
                    "0x4",
                    "mstore",
                    getAddress(taker),
                    "0x24",
                    "mstore",
                    hexlify(offer.givesAmount),
                    "0x44",
                    "mstore",
                    "gas",
                    "call",
                    "and",
                    "0x0",
                    "0x0",
                    "0x24",
                    "0x0",
                    "0x0",
                    (0, exports.toWETH)(chainId),
                    "0x2e1a7d4d00000000000000000000000000000000000000000000000000000000",
                    "0x0",
                    "mstore",
                    hexlify(offer.getsAmount),
                    "0x4",
                    "mstore",
                    "gas",
                    "call",
                    "and",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0",
                    hexlify(offer.getsAmount),
                    getAddress(maker),
                    "gas",
                    "call",
                    "and",
                    "iszero",
                    "failure",
                    "jumpi",
                    getAddress(taker),
                    "selfdestruct",
                    ["failure", ["0x0", "0x0", "revert"]],
                ]);
            }
            return (0, emasm_1.emasm)([
                "pc",
                "returndatasize",
                "0xe4",
                "returndatasize",
                "returndatasize",
                getAddress(offer.givesToken),
                "0xd505accf00000000000000000000000000000000000000000000000000000000",
                "0x0",
                "mstore",
                maker,
                "0x4",
                "mstore",
                "address",
                "0x24",
                "mstore",
                hexlify(offer.givesAmount),
                "0x44",
                "mstore",
                hexlify(toBeArray(getUint(permitData.maker.expiry))),
                "0x64",
                "mstore",
                hexlify(toBeArray(getUint(permitData.maker.v))),
                "0x84",
                "mstore",
                hexlify(permitData.maker.r),
                "0xa4",
                "mstore",
                hexlify(permitData.maker.s),
                "0xc4",
                "mstore",
                "gas",
                "call",
                "0x0",
                "0x0",
                "0x44",
                "0x0",
                "0x0",
                getAddress(offer.givesToken),
                "0x23b872dd00000000000000000000000000000000000000000000000000000000",
                "0x0",
                "mstore",
                getAddress(maker),
                "0x4",
                "mstore",
                getAddress(taker),
                "0x24",
                "mstore",
                hexlify(offer.givesAmount),
                "0x44",
                "mstore",
                "gas",
                "call",
                "and",
                "0x0",
                "0x0",
                "0x64",
                "0x0",
                "0x0",
                getAddress(offer.getsToken),
                getAddress(taker),
                "0x4",
                "mstore",
                getAddress(maker),
                "0x24",
                "mstore",
                hexlify(offer.getsAmount),
                "0x44",
                "mstore",
                "gas",
                "call",
                "and",
                "iszero",
                "failure",
                "jumpi",
                getAddress(maker),
                "selfdestruct",
                ["failure", ["0x0", "0x0", "revert"]],
            ]);
        }
        else if (permitData.taker && !permitData.maker) {
            if (offer.givesToken === ethers_1.ethers.ZeroAddress) {
                return (0, emasm_1.emasm)([
                    "pc",
                    "returndatasize",
                    "0xe4",
                    "returndatasize",
                    "returndatasize",
                    getAddress(offer.getsToken),
                    "0xd505accf00000000000000000000000000000000000000000000000000000000",
                    "0x0",
                    "mstore",
                    taker,
                    "0x4",
                    "mstore",
                    "address",
                    "0x24",
                    "mstore",
                    hexlify(offer.getsAmount),
                    "0x44",
                    "mstore",
                    hexlify(toBeArray(getUint(permitData.taker.expiry))),
                    "0x64",
                    "mstore",
                    hexlify(toBeArray(getUint(permitData.taker.v))),
                    "0x84",
                    "mstore",
                    hexlify(permitData.taker.r),
                    "0xa4",
                    "mstore",
                    hexlify(permitData.taker.s),
                    "0xc4",
                    "mstore",
                    "gas",
                    "call",
                    "0x0",
                    "0x0",
                    "0x64",
                    "0x0",
                    "0x0",
                    (0, exports.toWETH)(chainId),
                    "0x23b872dd00000000000000000000000000000000000000000000000000000000",
                    "0x0",
                    "mstore",
                    getAddress(maker),
                    "0x4",
                    "mstore",
                    "address",
                    "0x24",
                    "mstore",
                    hexlify(offer.givesAmount),
                    "0x44",
                    "mstore",
                    "gas",
                    "call",
                    "and",
                    "0x0",
                    "0x0",
                    "0x64",
                    "0x0",
                    "0x0",
                    getAddress(offer.getsToken),
                    getAddress(taker),
                    "0x4",
                    "mstore",
                    getAddress(maker),
                    "0x24",
                    "mstore",
                    hexlify(offer.getsAmount),
                    "0x44",
                    "mstore",
                    "gas",
                    "call",
                    "and",
                    "0x0",
                    "0x0",
                    "0x24",
                    "0x0",
                    "0x0",
                    (0, exports.toWETH)(chainId),
                    "0x2e1a7d4d00000000000000000000000000000000000000000000000000000000",
                    "0x0",
                    "mstore",
                    hexlify(offer.givesAmount),
                    "0x4",
                    "mstore",
                    "gas",
                    "call",
                    "and",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0",
                    hexlify(offer.givesAmount),
                    getAddress(taker),
                    "gas",
                    "call",
                    "and",
                    "iszero",
                    "failure",
                    "jumpi",
                    getAddress(maker),
                    "selfdestruct",
                    ["failure", ["0x0", "0x0", "revert"]],
                ]);
            }
            return (0, emasm_1.emasm)(ln([
                "pc",
                "returndatasize",
                "0xe4",
                "returndatasize",
                "returndatasize",
                getAddress(offer.getsToken),
                "0xd505accf00000000000000000000000000000000000000000000000000000000",
                "0x0",
                "mstore",
                taker,
                "0x4",
                "mstore",
                "address",
                "0x24",
                "mstore",
                hexlify(offer.getsAmount),
                "0x44",
                "mstore",
                hexlify(toBeArray(getUint(permitData.taker.expiry))),
                "0x64",
                "mstore",
                hexlify(toBeArray(getUint(permitData.taker.v))),
                "0x84",
                "mstore",
                hexlify(permitData.taker.r),
                "0xa4",
                "mstore",
                hexlify(permitData.taker.s),
                "0xc4",
                "mstore",
                "gas",
                "call",
                "0x0",
                "0x0",
                "0x64",
                "0x0",
                "0x0",
                getAddress(offer.givesToken),
                "0x23b872dd00000000000000000000000000000000000000000000000000000000",
                "0x0",
                "mstore",
                getAddress(maker),
                "0x4",
                "mstore",
                getAddress(taker),
                "0x24",
                "mstore",
                hexlify(offer.givesAmount),
                "0x44",
                "mstore",
                "gas",
                "call",
                "and",
                "0x0",
                "0x0",
                "0x64",
                "0x0",
                "0x0",
                getAddress(offer.getsToken),
                getAddress(taker),
                "0x4",
                "mstore",
                getAddress(maker),
                "0x24",
                "mstore",
                hexlify(offer.getsAmount),
                "0x44",
                "mstore",
                "gas",
                "call",
                "and",
                "iszero",
                "failure",
                "jumpi",
                getAddress(maker),
                "selfdestruct",
                ["failure", ["0x0", "0x0", "revert"]],
            ]));
        }
        else {
            return (0, emasm_1.emasm)([
                "pc",
                "returndatasize",
                "0xe4",
                "returndatasize",
                "returndatasize",
                getAddress(offer.givesToken),
                "0xd505accf00000000000000000000000000000000000000000000000000000000",
                "0x0",
                "mstore",
                maker,
                "0x4",
                "mstore",
                "address",
                "0x24",
                "mstore",
                hexlify(offer.givesAmount),
                "0x44",
                "mstore",
                hexlify(toBeArray(getUint(permitData.maker.expiry))),
                "0x64",
                "mstore",
                hexlify(toBeArray(getUint(permitData.maker.v))),
                "0x84",
                "mstore",
                hexlify(permitData.maker.r),
                "0xa4",
                "mstore",
                hexlify(permitData.maker.s),
                "0xc4",
                "mstore",
                "gas",
                "call",
                "0x0",
                "0x0",
                "0xe4",
                "0x0",
                "0x0",
                getAddress(offer.getsToken),
                "0xd505accf00000000000000000000000000000000000000000000000000000000",
                "0x0",
                "mstore",
                taker,
                "0x4",
                "mstore",
                "address",
                "0x24",
                "mstore",
                hexlify(offer.getsAmount),
                "0x44",
                "mstore",
                hexlify(toBeArray(getUint(permitData.taker.expiry))),
                "0x64",
                "mstore",
                hexlify(toBeArray(getUint(permitData.taker.v))),
                "0x84",
                "mstore",
                hexlify(permitData.taker.r),
                "0xa4",
                "mstore",
                hexlify(permitData.taker.s),
                "0xc4",
                "mstore",
                "gas",
                "call",
                "0x0",
                "0x0",
                "0x64",
                "0x0",
                "0x0",
                getAddress(offer.givesToken),
                "0x23b872dd00000000000000000000000000000000000000000000000000000000",
                "0x0",
                "mstore",
                getAddress(maker),
                "0x4",
                "mstore",
                getAddress(taker),
                "0x24",
                "mstore",
                hexlify(offer.givesAmount),
                "0x44",
                "mstore",
                "gas",
                "call",
                "and",
                "0x0",
                "0x0",
                "0x64",
                "0x0",
                "0x0",
                getAddress(offer.getsToken),
                getAddress(taker),
                "0x4",
                "mstore",
                getAddress(maker),
                "0x24",
                "mstore",
                hexlify(offer.getsAmount),
                "0x44",
                "mstore",
                "gas",
                "call",
                "and",
                "iszero",
                "failure",
                "jumpi",
                getAddress(maker),
                "selfdestruct",
                ["failure", ["0x0", "0x0", "revert"]],
            ]);
        }
    }
    if (offer.givesToken === ethers_1.ethers.ZeroAddress) {
        return (0, emasm_1.emasm)([
            "pc",
            "returndatasize",
            "0x64",
            "returndatasize",
            "returndatasize",
            (0, exports.toWETH)(chainId),
            "0x23b872dd00000000000000000000000000000000000000000000000000000000",
            "returndatasize",
            "mstore",
            getAddress(maker),
            "0x4",
            "mstore",
            "address",
            "0x24",
            "mstore",
            hexlify(offer.givesAmount),
            "0x44",
            "mstore",
            "gas",
            "call",
            "0x0",
            "0x0",
            "0x64",
            "0x0",
            "0x0",
            getAddress(offer.getsToken),
            getAddress(taker),
            "0x4",
            "mstore",
            getAddress(maker),
            "0x24",
            "mstore",
            hexlify(offer.getsAmount),
            "0x44",
            "mstore",
            "gas",
            "call",
            "and",
            "0x0",
            "0x0",
            "0x24",
            "0x0",
            "0x0",
            (0, exports.toWETH)(chainId),
            "0x2e1a7d4d00000000000000000000000000000000000000000000000000000000",
            "0x0",
            "mstore",
            hexlify(offer.givesAmount),
            "0x4",
            "mstore",
            "gas",
            "call",
            "and",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            hexlify(offer.givesAmount),
            getAddress(taker),
            "gas",
            "call",
            "and",
            "iszero",
            "failure",
            "jumpi",
            getAddress(maker),
            "selfdestruct",
            ["failure", ["0x0", "0x0", "revert"]],
        ]);
    }
    if (offer.getsToken === ethers_1.ethers.ZeroAddress) {
        return (0, emasm_1.emasm)([
            "pc",
            "returndatasize",
            "0x64",
            "returndatasize",
            "returndatasize",
            (0, exports.toWETH)(chainId),
            "0x23b872dd00000000000000000000000000000000000000000000000000000000",
            "returndatasize",
            "mstore",
            getAddress(taker),
            "0x4",
            "mstore",
            "address",
            "0x24",
            "mstore",
            hexlify(offer.getsAmount),
            "0x44",
            "mstore",
            "gas",
            "call",
            "0x0",
            "0x0",
            "0x64",
            "0x0",
            "0x0",
            getAddress(offer.givesToken),
            getAddress(maker),
            "0x4",
            "mstore",
            getAddress(taker),
            "0x24",
            "mstore",
            hexlify(offer.givesAmount),
            "0x44",
            "mstore",
            "gas",
            "call",
            "and",
            "0x0",
            "0x0",
            "0x24",
            "0x0",
            "0x0",
            (0, exports.toWETH)(chainId),
            "0x2e1a7d4d00000000000000000000000000000000000000000000000000000000",
            "0x0",
            "mstore",
            hexlify(offer.getsAmount),
            "0x4",
            "mstore",
            "gas",
            "call",
            "and",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            hexlify(offer.getsAmount),
            getAddress(maker),
            "gas",
            "call",
            "and",
            "iszero",
            "failure",
            "jumpi",
            getAddress(taker),
            "selfdestruct",
            ["failure", ["0x0", "0x0", "revert"]],
        ]);
    }
    return (0, emasm_1.emasm)(ln([
        "pc",
        "returndatasize",
        "0x64",
        "returndatasize",
        "returndatasize",
        getAddress(offer.givesToken),
        "0x23b872dd00000000000000000000000000000000000000000000000000000000",
        "returndatasize",
        "mstore",
        getAddress(maker),
        "0x4",
        "mstore",
        getAddress(taker),
        "0x24",
        "mstore",
        hexlify(offer.givesAmount),
        "0x44",
        "mstore",
        "gas",
        "call",
        "0x0",
        "0x0",
        "0x64",
        "0x0",
        "0x0",
        getAddress(offer.getsToken),
        getAddress(taker),
        "0x4",
        "mstore",
        getAddress(maker),
        "0x24",
        "mstore",
        hexlify(offer.getsAmount),
        "0x44",
        "mstore",
        "gas",
        "call",
        "and",
        "iszero",
        "failure",
        "jumpi",
        getAddress(maker),
        "selfdestruct",
        ["failure", ["0x0", "0x0", "revert"]],
    ]));
};
exports.createContract = createContract;
//# sourceMappingURL=trade.js.map